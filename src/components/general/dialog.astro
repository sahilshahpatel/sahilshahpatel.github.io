---
interface Props {
    modal?: boolean,
    open?: boolean,
    invertOpenOn?: boolean,
    openOnReferrer?: {
        hostname: string,
        pathname: string,
    },
}

const props = Astro.props;
---
<script>
    const dialogs = document.querySelectorAll("dialog.modal") as NodeListOf<HTMLDialogElement>;
    dialogs.forEach(dialog => {
        const closeButton = dialog.querySelector(".popup-close") as HTMLButtonElement;

        let shouldOpen = dialog.dataset.open === "true";

        if (dialog.dataset.openOnReferrer && document.referrer != "") {
            const referrer = new URL(document.referrer)
            const openOnReferrer = JSON.parse(dialog.dataset.openOnReferrer)

            const _shouldOpen = referrer.hostname === openOnReferrer.hostname && referrer.pathname.startsWith(openOnReferrer.pathname);
            shouldOpen ||= dialog.dataset.invertOpenOn ? !_shouldOpen : _shouldOpen;
        }


        if (shouldOpen) {
            if (dialog.dataset.modal){
                dialog.showModal();
            } else {
                dialog.show();
            }
        }

        closeButton.addEventListener("click", () => {
            dialog.close();
        })
    })
</script>

<dialog class="modal | container" data-open={props.open ? "true" : "false"} data-modal={props.modal ? "true" : "false"} data-invert-open-on={props.invertOpenOn ? "true" : "false"} data-open-on-referrer={JSON.stringify(props.openOnReferrer)}>
    <div class="popup">
        <button autofocus class="popup-close | reset-style">
            <i class="bi-x-lg"></i>
        </button>
        <div class="flow">
            <div class="popup-title">
                <slot name="title" />
            </div>
            <div>
                <slot name="body" />
            </div>
        </div>
    </div>
</dialog>

<style lang="scss">
    @use "@styles/global/variables" as *;

    dialog {
        // Center on screen
        margin-inline: auto;
        margin-top: min(10%, 100px);

        border-image-source: $gradient-accent;
        border-image-slice: 1;
    }

    dialog::backdrop {
        background-color: $clr-primary-1000;
        opacity: 0.75;
    }


    .popup {
        position: relative;
        padding: map-get($sizes, 300);
        background-color: var(--clr-primary-200);

        .popup-title {
            font-size: map-get($font-sizes, 600);
            font-weight: map-get($font-weights, "semi-bold");
        }

        .popup-close {
            position: absolute;
            top:   map-get($sizes, 200);
            right: map-get($sizes, 200);
        }
    }
</style>