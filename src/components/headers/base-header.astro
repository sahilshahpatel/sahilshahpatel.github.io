---
import type { LinkData } from '../../types';

interface Props {
    homeHref: string,
    links: LinkData[],
}

const props = Astro.props as Props;
---
<script>
    const navToggle = document.querySelector('.mobile-nav-toggle')!;
    const navOpen = document.querySelector('.mobile-nav-open')!;
    const navClose = document.querySelector('.mobile-nav-close')!;
    const primaryNav = document.querySelector('.primary-nav')!;

    // Toggle navigation on click
    navToggle.addEventListener('click', () => {
        primaryNav.classList.toggle('open');

        navOpen.classList.toggle('visually-hidden');
        navClose.classList.toggle('visually-hidden');
    });
</script>

<header class="primary-header">
    <div class="primary-logo">
        <a href={props.homeHref} class="text-gradient-accent fs-800 fw-bold">Sahil Patel</a>
    </div>
    <div class="mobile-nav-toggle fs-600">
        <i class="mobile-nav-open | bi-list"></i>
        <i class="mobile-nav-close | bi-x-lg visually-hidden"></i>
    </div>
    <nav id="primary-nav" class="primary-nav">
        { props.links.map(link => <div><a href={link.href}>{link.text}</a></div>) }
    </nav>
</header>

<style lang="scss">
    @use "@styles/global/variables" as *;

    .primary-header {
        // Reference for absolute mobile nav
        position: relative;

        display: flex;
        flex-wrap: wrap;
        align-items: center;
        justify-content: space-between;

        width: min(#{$container-max-width} + 500px, 100%);
        margin-inline: auto;

        padding-inline: map-get($sizes, 500);
        padding-block: map-get($sizes, 400);
    }

    .primary-header .primary-logo {
        flex-basis: 0;
        flex-grow: 1;
        flex-shrink: 1;
    }


    .primary-nav {
        display: flex;
        justify-content: space-evenly;
        gap: map-get($sizes, 800);
    }

    .primary-nav a {
        color: var(--clr-text-default);
        text-decoration: none;

        transition: color 200ms ease;
    }

    .primary-nav a:hover {
        color: var(--clr-text-default-medium);
    }

    .mobile-nav-toggle {
        display: none;
    }

    // On mobile...
    @media (max-width: 700px) {
        .primary-nav {
            display: none;
        }

        .primary-nav.open {
            // Absolute position mobile nav above other content
            position: absolute;
            left: 0;
            right: 0;
            top: calc(100% - map-get($sizes, 200));
            margin-inline: map-get($sizes, 400);
            z-index: 1000;

            display: flex;
            flex-direction: column;
            align-items: center;

            padding-top: map-get($sizes, 200);
            padding-bottom: map-get($sizes, 200);
            gap: map-get($sizes, 200);

            box-shadow: $box-shadow-light;

            background-color: var(--clr-primary-200);
        }

        .mobile-nav-toggle {
            display: flex;
            align-items: center;

            cursor: pointer;
        }
    }
</style>